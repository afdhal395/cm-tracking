-- MySQL Script generated by MySQL Workbench
-- Mon Apr 22 15:48:57 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema trackingapp
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `trackingapp` ;

-- -----------------------------------------------------
-- Schema trackingapp
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `trackingapp` DEFAULT CHARACTER SET utf8 ;
USE `trackingapp` ;

-- -----------------------------------------------------
-- Table `trackingapp`.`state`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trackingapp`.`state` (
  `stateID` INT NOT NULL AUTO_INCREMENT,
  `stateName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`stateID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `trackingapp`.`locationType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trackingapp`.`locationType` (
  `locationTypeID` INT NOT NULL AUTO_INCREMENT,
  `locationTypeName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`locationTypeID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `trackingapp`.`location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trackingapp`.`location` (
  `locationID` INT NOT NULL AUTO_INCREMENT,
  `locationName` VARCHAR(45) NOT NULL,
  `stateID` INT NOT NULL,
  `locationTypeID` INT NOT NULL,
  PRIMARY KEY (`locationID`),
  CONSTRAINT `fk_location_state1`
    FOREIGN KEY (`stateID`)
    REFERENCES `trackingapp`.`state` (`stateID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_location_locationType1`
    FOREIGN KEY (`locationTypeID`)
    REFERENCES `trackingapp`.`locationType` (`locationTypeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_location_state1_idx` ON `trackingapp`.`location` (`stateID` ASC);

CREATE INDEX `fk_location_locationType1_idx` ON `trackingapp`.`location` (`locationTypeID` ASC);


-- -----------------------------------------------------
-- Table `trackingapp`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trackingapp`.`role` (
  `roleID` INT NOT NULL AUTO_INCREMENT,
  `roleName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`roleID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `roleName_UNIQUE` ON `trackingapp`.`role` (`roleName` ASC);


-- -----------------------------------------------------
-- Table `trackingapp`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trackingapp`.`user` (
  `userID` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `userpassword` VARCHAR(45) NOT NULL,
  `locationID` INT NOT NULL,
  `roleID` INT NOT NULL,
  PRIMARY KEY (`userID`),
  CONSTRAINT `fk_user_location`
    FOREIGN KEY (`locationID`)
    REFERENCES `trackingapp`.`location` (`locationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role1`
    FOREIGN KEY (`roleID`)
    REFERENCES `trackingapp`.`role` (`roleID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `username_UNIQUE` ON `trackingapp`.`user` (`username` ASC);

CREATE INDEX `fk_user_location_idx` ON `trackingapp`.`user` (`locationID` ASC);

CREATE INDEX `fk_user_role1_idx` ON `trackingapp`.`user` (`roleID` ASC);


-- -----------------------------------------------------
-- Table `trackingapp`.`brand`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trackingapp`.`brand` (
  `brandID` INT NOT NULL AUTO_INCREMENT,
  `brandName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`brandID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `trackingapp`.`model`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trackingapp`.`model` (
  `modelID` INT NOT NULL AUTO_INCREMENT,
  `modelName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`modelID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `modelName_UNIQUE` ON `trackingapp`.`model` (`modelName` ASC);


-- -----------------------------------------------------
-- Table `trackingapp`.`assetStatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trackingapp`.`assetStatus` (
  `assetStatusID` INT NOT NULL AUTO_INCREMENT,
  `assetStatusName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`assetStatusID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `trackingapp`.`serial`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trackingapp`.`serial` (
  `serialID` INT NOT NULL AUTO_INCREMENT,
  `serialName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`serialID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `serialName_UNIQUE` ON `trackingapp`.`serial` (`serialName` ASC);


-- -----------------------------------------------------
-- Table `trackingapp`.`asset`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trackingapp`.`asset` (
  `assetID` INT NOT NULL AUTO_INCREMENT,
  `brandID` INT NOT NULL,
  `modelID` INT NOT NULL,
  `serialID` INT NOT NULL,
  `locationID` INT NOT NULL,
  `assetStatusID` INT NOT NULL,
  PRIMARY KEY (`assetID`),
  CONSTRAINT `fk_asset_brand1`
    FOREIGN KEY (`brandID`)
    REFERENCES `trackingapp`.`brand` (`brandID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_asset_model1`
    FOREIGN KEY (`modelID`)
    REFERENCES `trackingapp`.`model` (`modelID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_asset_location1`
    FOREIGN KEY (`locationID`)
    REFERENCES `trackingapp`.`location` (`locationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_asset_assetStatus1`
    FOREIGN KEY (`assetStatusID`)
    REFERENCES `trackingapp`.`assetStatus` (`assetStatusID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_asset_serial1`
    FOREIGN KEY (`serialID`)
    REFERENCES `trackingapp`.`serial` (`serialID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_asset_brand1_idx` ON `trackingapp`.`asset` (`brandID` ASC);

CREATE INDEX `fk_asset_model1_idx` ON `trackingapp`.`asset` (`modelID` ASC);

CREATE INDEX `fk_asset_location1_idx` ON `trackingapp`.`asset` (`locationID` ASC);

CREATE INDEX `fk_asset_assetStatus1_idx` ON `trackingapp`.`asset` (`assetStatusID` ASC);

CREATE INDEX `fk_asset_serial1_idx` ON `trackingapp`.`asset` (`serialID` ASC);


-- -----------------------------------------------------
-- Table `trackingapp`.`sparePartType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trackingapp`.`sparePartType` (
  `sparePartTypeID` INT NOT NULL AUTO_INCREMENT,
  `sparePartTypeName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`sparePartTypeID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `sparePartTypeName_UNIQUE` ON `trackingapp`.`sparePartType` (`sparePartTypeName` ASC);


-- -----------------------------------------------------
-- Table `trackingapp`.`sparepart`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trackingapp`.`sparepart` (
  `sparepartID` INT NOT NULL AUTO_INCREMENT,
  `brandID` INT NOT NULL,
  `modelID` INT NOT NULL,
  `serialID` INT NOT NULL,
  `locationID` INT NOT NULL,
  `sparePartTypeID` INT NOT NULL,
  PRIMARY KEY (`sparepartID`),
  CONSTRAINT `fk_sparepart_brand1`
    FOREIGN KEY (`brandID`)
    REFERENCES `trackingapp`.`brand` (`brandID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sparepart_model1`
    FOREIGN KEY (`modelID`)
    REFERENCES `trackingapp`.`model` (`modelID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sparepart_serial1`
    FOREIGN KEY (`serialID`)
    REFERENCES `trackingapp`.`serial` (`serialID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sparepart_location1`
    FOREIGN KEY (`locationID`)
    REFERENCES `trackingapp`.`location` (`locationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sparepart_sparePartType1`
    FOREIGN KEY (`sparePartTypeID`)
    REFERENCES `trackingapp`.`sparePartType` (`sparePartTypeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_sparepart_brand1_idx` ON `trackingapp`.`sparepart` (`brandID` ASC);

CREATE INDEX `fk_sparepart_model1_idx` ON `trackingapp`.`sparepart` (`modelID` ASC);

CREATE INDEX `fk_sparepart_serial1_idx` ON `trackingapp`.`sparepart` (`serialID` ASC);

CREATE INDEX `fk_sparepart_location1_idx` ON `trackingapp`.`sparepart` (`locationID` ASC);

CREATE INDEX `fk_sparepart_sparePartType1_idx` ON `trackingapp`.`sparepart` (`sparePartTypeID` ASC);


-- -----------------------------------------------------
-- Table `trackingapp`.`txnType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trackingapp`.`txnType` (
  `txnTypeID` INT NOT NULL AUTO_INCREMENT,
  `txnTypeName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`txnTypeID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `trackingapp`.`log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trackingapp`.`log` (
  `logID` INT NOT NULL AUTO_INCREMENT,
  `logDate` DATE NOT NULL,
  `locationID` INT NOT NULL,
  `assetID` INT NOT NULL,
  `txnTypeID` INT NOT NULL,
  `userID` INT NOT NULL,
  PRIMARY KEY (`logID`),
  CONSTRAINT `fk_log_location1`
    FOREIGN KEY (`locationID`)
    REFERENCES `trackingapp`.`location` (`locationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_asset1`
    FOREIGN KEY (`assetID`)
    REFERENCES `trackingapp`.`asset` (`assetID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_txnType1`
    FOREIGN KEY (`txnTypeID`)
    REFERENCES `trackingapp`.`txnType` (`txnTypeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_log_location1_idx` ON `trackingapp`.`log` (`locationID` ASC);

CREATE INDEX `fk_log_asset1_idx` ON `trackingapp`.`log` (`assetID` ASC);

CREATE INDEX `fk_log_txnType1_idx` ON `trackingapp`.`log` (`txnTypeID` ASC);


-- -----------------------------------------------------
-- Table `trackingapp`.`remarks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `trackingapp`.`remarks` (
  `remarksID` INT NOT NULL AUTO_INCREMENT,
  `logID` INT NOT NULL,
  `remarksContent` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`remarksID`),
  CONSTRAINT `fk_remarks_log1`
    FOREIGN KEY (`logID`)
    REFERENCES `trackingapp`.`log` (`logID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_remarks_log1_idx` ON `trackingapp`.`remarks` (`logID` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `trackingapp`.`state`
-- -----------------------------------------------------
START TRANSACTION;
USE `trackingapp`;
INSERT INTO `trackingapp`.`state` (`stateID`, `stateName`) VALUES (1, 'Johor');
INSERT INTO `trackingapp`.`state` (`stateID`, `stateName`) VALUES (2, 'Melaka');
INSERT INTO `trackingapp`.`state` (`stateID`, `stateName`) VALUES (3, 'Negeri Sembilan');

COMMIT;


-- -----------------------------------------------------
-- Data for table `trackingapp`.`locationType`
-- -----------------------------------------------------
START TRANSACTION;
USE `trackingapp`;
INSERT INTO `trackingapp`.`locationType` (`locationTypeID`, `locationTypeName`) VALUES (1, 'Store');
INSERT INTO `trackingapp`.`locationType` (`locationTypeID`, `locationTypeName`) VALUES (2, 'School');

COMMIT;


-- -----------------------------------------------------
-- Data for table `trackingapp`.`location`
-- -----------------------------------------------------
START TRANSACTION;
USE `trackingapp`;
INSERT INTO `trackingapp`.`location` (`locationID`, `locationName`, `stateID`, `locationTypeID`) VALUES (1, 'KK Kuala Pilah', 3, 1);
INSERT INTO `trackingapp`.`location` (`locationID`, `locationName`, `stateID`, `locationTypeID`) VALUES (2, 'KK Batu Pahat', 1, 1);
INSERT INTO `trackingapp`.`location` (`locationID`, `locationName`, `stateID`, `locationTypeID`) VALUES (3, 'Poli Metro', 1, 1);
INSERT INTO `trackingapp`.`location` (`locationID`, `locationName`, `stateID`, `locationTypeID`) VALUES (4, 'BRC Muar', 1, 2);
INSERT INTO `trackingapp`.`location` (`locationID`, `locationName`, `stateID`, `locationTypeID`) VALUES (5, 'BRC UTHM', 1, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `trackingapp`.`role`
-- -----------------------------------------------------
START TRANSACTION;
USE `trackingapp`;
INSERT INTO `trackingapp`.`role` (`roleID`, `roleName`) VALUES (1, 'Admin');
INSERT INTO `trackingapp`.`role` (`roleID`, `roleName`) VALUES (2, 'Store Keeper');

COMMIT;


-- -----------------------------------------------------
-- Data for table `trackingapp`.`brand`
-- -----------------------------------------------------
START TRANSACTION;
USE `trackingapp`;
INSERT INTO `trackingapp`.`brand` (`brandID`, `brandName`) VALUES (1, 'HP');
INSERT INTO `trackingapp`.`brand` (`brandID`, `brandName`) VALUES (2, 'DELL');
INSERT INTO `trackingapp`.`brand` (`brandID`, `brandName`) VALUES (3, 'LENOVO');

COMMIT;


-- -----------------------------------------------------
-- Data for table `trackingapp`.`model`
-- -----------------------------------------------------
START TRANSACTION;
USE `trackingapp`;
INSERT INTO `trackingapp`.`model` (`modelID`, `modelName`) VALUES (1, '8640P');
INSERT INTO `trackingapp`.`model` (`modelID`, `modelName`) VALUES (2, 'E5440');
INSERT INTO `trackingapp`.`model` (`modelID`, `modelName`) VALUES (3, 'T440');

COMMIT;


-- -----------------------------------------------------
-- Data for table `trackingapp`.`assetStatus`
-- -----------------------------------------------------
START TRANSACTION;
USE `trackingapp`;
INSERT INTO `trackingapp`.`assetStatus` (`assetStatusID`, `assetStatusName`) VALUES (1, 'Active');
INSERT INTO `trackingapp`.`assetStatus` (`assetStatusID`, `assetStatusName`) VALUES (2, 'Archived');

COMMIT;


-- -----------------------------------------------------
-- Data for table `trackingapp`.`serial`
-- -----------------------------------------------------
START TRANSACTION;
USE `trackingapp`;
INSERT INTO `trackingapp`.`serial` (`serialID`, `serialName`) VALUES (1, 'SGH123456');
INSERT INTO `trackingapp`.`serial` (`serialID`, `serialName`) VALUES (2, 'D985666');
INSERT INTO `trackingapp`.`serial` (`serialID`, `serialName`) VALUES (3, 'LEN23449');
INSERT INTO `trackingapp`.`serial` (`serialID`, `serialName`) VALUES (4, 'LEN23450');

COMMIT;


-- -----------------------------------------------------
-- Data for table `trackingapp`.`asset`
-- -----------------------------------------------------
START TRANSACTION;
USE `trackingapp`;
INSERT INTO `trackingapp`.`asset` (`assetID`, `brandID`, `modelID`, `serialID`, `locationID`, `assetStatusID`) VALUES (1, 1, 1, 1, 4, 1);
INSERT INTO `trackingapp`.`asset` (`assetID`, `brandID`, `modelID`, `serialID`, `locationID`, `assetStatusID`) VALUES (2, 2, 2, 2, 4, 1);
INSERT INTO `trackingapp`.`asset` (`assetID`, `brandID`, `modelID`, `serialID`, `locationID`, `assetStatusID`) VALUES (3, 3, 3, 3, 1, 2);
INSERT INTO `trackingapp`.`asset` (`assetID`, `brandID`, `modelID`, `serialID`, `locationID`, `assetStatusID`) VALUES (4, 3, 3, 4, 5, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `trackingapp`.`sparePartType`
-- -----------------------------------------------------
START TRANSACTION;
USE `trackingapp`;
INSERT INTO `trackingapp`.`sparePartType` (`sparePartTypeID`, `sparePartTypeName`) VALUES (1, 'HDD');
INSERT INTO `trackingapp`.`sparePartType` (`sparePartTypeID`, `sparePartTypeName`) VALUES (2, 'SSHD');
INSERT INTO `trackingapp`.`sparePartType` (`sparePartTypeID`, `sparePartTypeName`) VALUES (3, 'RAM');
INSERT INTO `trackingapp`.`sparePartType` (`sparePartTypeID`, `sparePartTypeName`) VALUES (4, 'Processor');
INSERT INTO `trackingapp`.`sparePartType` (`sparePartTypeID`, `sparePartTypeName`) VALUES (5, 'ODD');
INSERT INTO `trackingapp`.`sparePartType` (`sparePartTypeID`, `sparePartTypeName`) VALUES (6, 'Keyboard');
INSERT INTO `trackingapp`.`sparePartType` (`sparePartTypeID`, `sparePartTypeName`) VALUES (7, 'Mouse');
INSERT INTO `trackingapp`.`sparePartType` (`sparePartTypeID`, `sparePartTypeName`) VALUES (8, 'Adapter');

COMMIT;


-- -----------------------------------------------------
-- Data for table `trackingapp`.`txnType`
-- -----------------------------------------------------
START TRANSACTION;
USE `trackingapp`;
INSERT INTO `trackingapp`.`txnType` (`txnTypeID`, `txnTypeName`) VALUES (1, 'Checkin');
INSERT INTO `trackingapp`.`txnType` (`txnTypeID`, `txnTypeName`) VALUES (2, 'Transfer');
INSERT INTO `trackingapp`.`txnType` (`txnTypeID`, `txnTypeName`) VALUES (3, 'Checkout');

COMMIT;


-- -----------------------------------------------------
-- Data for table `trackingapp`.`log`
-- -----------------------------------------------------
START TRANSACTION;
USE `trackingapp`;
INSERT INTO `trackingapp`.`log` (`logID`, `logDate`, `locationID`, `assetID`, `txnTypeID`, `userID`) VALUES (1, '2019-03-01', 4, 3, 1, 1);
INSERT INTO `trackingapp`.`log` (`logID`, `logDate`, `locationID`, `assetID`, `txnTypeID`, `userID`) VALUES (2, '2019-03-02', 5, 3, 2, 1);
INSERT INTO `trackingapp`.`log` (`logID`, `logDate`, `locationID`, `assetID`, `txnTypeID`, `userID`) VALUES (3, '2019-03-12', 4, 1, 1, 1);
INSERT INTO `trackingapp`.`log` (`logID`, `logDate`, `locationID`, `assetID`, `txnTypeID`, `userID`) VALUES (4, '2019-03-12', 4, 2, 1, 1);
INSERT INTO `trackingapp`.`log` (`logID`, `logDate`, `locationID`, `assetID`, `txnTypeID`, `userID`) VALUES (5, '2019-03-14', 1, 3, 3, 1);
INSERT INTO `trackingapp`.`log` (`logID`, `logDate`, `locationID`, `assetID`, `txnTypeID`, `userID`) VALUES (6, '2019-03-14', 5, 4, 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `trackingapp`.`remarks`
-- -----------------------------------------------------
START TRANSACTION;
USE `trackingapp`;
INSERT INTO `trackingapp`.`remarks` (`remarksID`, `logID`, `remarksContent`) VALUES (1, 5, 'IM1234');
INSERT INTO `trackingapp`.`remarks` (`remarksID`, `logID`, `remarksContent`) VALUES (2, 6, 'Swap from IM1234');

COMMIT;

